{"version":3,"sources":["webpack:///./wp-content/themes/proximis/src/js/components/RefSlider.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AAC/B;AACH;AACM;;AAED;;AAEhD;AACA,uBAAuB,2DAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,6DAAa;AACrB;AACA;AACA;AACA,uDAAuD,OAAO;;AAE9D;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,oBAAoB,aAAa;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA,4BAA4B,YAAY;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,8CAAS;AACjB;AACA;AACA,aAAa;AACb,kBAAkB,8CAAM;AACxB,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6DAAK;AACjC,wCAAwC,oBAAoB;AAC5D,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,+DAAO;AACf;AACA,SAAS;AACT;AACA;AACA,QAAQ,+DAAO;AACf;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,OAAO;;AAE9D;AACA;AACA;AACA;AACA,uDAAuD;AACvD,aAAa;AACb,sCAAsC,oBAAoB;AAC1D,SAAS;AACT;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,6DAAK;AACtC;AACA;AACA,SAAS;;AAET,2BAA2B,6DAAK;AAChC;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA,QAAQ,6CAAQ;AAChB;AACA,SAAS;;AAET,QAAQ,6CAAQ;AAChB;AACA,SAAS;;AAET,QAAQ,6CAAQ;AAChB;AACA,kBAAkB,8CAAM;AACxB;AACA;AACA,gBAAgB,6CAAQ;AACxB;AACA,0BAA0B,8CAAM;AAChC;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,2BAA2B,6DAAK;AAChC,aAAa,oCAAoC;AACjD;AACA;AACA,iCAAiC,6DAAK;AACtC,aAAa,sCAAsC;AACnD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,QAAQ,6CAAQ,sBAAsB,oBAAoB;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B,6DAAK;AACnC;AACA,SAAS;AACT;;AAEA,yCAAyC,6DAAK;AAC9C;AACA;AACA,SAAS;;AAET,eAAe,SAAS;AACxB,QAAQ,6CAAQ;AAChB,uBAAuB,OAAO;AAC9B,kBAAkB,8CAAM;AACxB;AACA;AACA,gBAAgB,6CAAQ,4BAA4B,0BAA0B;AAC9E;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,YAAY,2DAAW,eAAe,mDAAW;AACjD;AACA;AACA;AACA,oBAAoB,2DAAO;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB,2DAAO;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB,2DAAO;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6DAAK,EAAE,6BAA6B;;AAEhE,QAAQ,+DAAO;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,iBAAiB;AAClE;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,2DAAW,eAAe,mDAAW;AACjD;AACA;AACA,SAAS;AACT;AACA,YAAY,2DAAW,gBAAgB,mDAAW;AAClD;AACA;AACA;AACA;AACA;AACA,iCAAiC,6DAAK,EAAE,6BAA6B;AACrE;AACA,wBAAwB,6DAAK;AAC7B;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET,QAAQ,2DAAW;AACnB;AACA;;AAEe,+EAAgB,EAAC","file":"RefSlider.js","sourcesContent":["import { superPolyfill, query, forEach, superWindow } from '@stereorepo/sac';\nimport { Collant } from '@stereorepo/collant';\nimport { TweenMax, TweenLite } from 'gsap';\nimport ScrollToPlugin from 'gsap/ScrollToPlugin';\n\nimport { easing, breakpoints } from '../global';\n\n// NOTE: We need to use ScrollToPlugin in order to ensure that the plugin won't be tree-shaked\nconst ensureScrollTo = ScrollToPlugin;\n\nclass ReferencesSlider {\n    constructor() {\n        this.state = {\n            transitioning: false,\n            sticky: false\n        };\n\n        this.referenceSlider = null;\n        this.loader = null;\n        this.idsList = [];\n        this.slugsList = [];\n        this.collants = [];\n        this.currentReferenceId = 0;\n        this.newReferenceId = 0;\n        this.type = null;\n        this.currentSlide = null;\n\n        this.resetContext = this.resetContext.bind(this);\n        this.resizeHandler = this.resizeHandler.bind(this);\n\n        superPolyfill.initializeWhatwgFetch();\n    }\n    getAllSlideIds(callback) {\n        const action = 'get_references_ids';\n        const url = `/wp-admin/admin-ajax.php?action=${action}`;\n\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type':\n                    'application/x-www-form-urlencoded; charset=utf-8'\n            }\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then(({ ids, slugs }) => {\n                this.idsList = [...ids];\n                this.slugsList = [...slugs];\n                callback();\n            });\n    }\n    selectFollowingElement({ id = null }) {\n        if (id !== null) {\n            this.newReferenceId = id;\n        } else {\n            this.findFollowingElement();\n        }\n    }\n    findFollowingElement() {\n        const idIndex = this.idsList.indexOf(this.currentReferenceId);\n\n        if (this.type === 'next') {\n            this.newReferenceId =\n                idIndex + 2 > this.idsList.length\n                    ? this.idsList.slice(0, 1)\n                    : this.idsList.slice(idIndex + 1, idIndex + 2);\n        } else if (this.type === 'prev') {\n            this.newReferenceId =\n                idIndex - 1 < 0\n                    ? this.idsList.slice(-1)\n                    : this.idsList.slice(idIndex - 1, idIndex - 2);\n        }\n    }\n    scrollToReference() {\n        const offset =\n            window.scrollY + this.referenceSlider.getBoundingClientRect().top;\n\n        TweenLite.to(window, 0.5, {\n            scrollTo: {\n                y: offset\n            },\n            ease: easing.easeInOut\n        });\n    }\n    changeLocationHash(followingSlide) {\n        const slug = followingSlide.dataset.refSlug;\n\n        window.location.hash = slug;\n    }\n    checkLocationHash() {\n        const { hash } = window.location;\n        if (hash) {\n            if (this.state.transitioning) return;\n\n            const slugIndex = this.slugsList.indexOf(hash.replace('#', ''));\n            this.newReferenceId = this.idsList[slugIndex];\n\n            this.type = 'next';\n            this.state.transitioning = true;\n            this.scrollToReference();\n            this.checkLoadingCall();\n        }\n    }\n    checkLoadingCall() {\n        if (this.newReferenceId !== this.currentReferenceId) {\n            const [slide] = query({\n                selector: `.js-ref-id-${this.newReferenceId}`\n            });\n\n            if (slide) {\n                slide.classList.add('js-ref-following-slide');\n                this.slideAnimation();\n            } else {\n                this.startLoadingAction();\n            }\n        } else {\n            this.newReferenceId = null;\n            this.type = null;\n            this.state.transitioning = false;\n        }\n    }\n    stickElements() {\n        this.state.sticky = true;\n\n        forEach(this.collants, collant => {\n            collant.stickIt();\n        });\n    }\n    unstickElements() {\n        forEach(this.collants, collant => {\n            collant.ripIt();\n        });\n\n        this.state.sticky = false;\n    }\n    startLoadingAction() {\n        this.loader.classList.add('loading');\n\n        const action = 'load_references';\n        const url = `/wp-admin/admin-ajax.php?action=${action}`;\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type':\n                    'application/x-www-form-urlencoded; charset=utf-8'\n            },\n            body: `new_reference_id=${this.newReferenceId}`\n        })\n            .then(res => res.text())\n            .then(response => {\n                this.currentSlide.insertAdjacentHTML('afterend', response);\n\n                this.slideAnimation();\n            });\n    }\n    slideAnimation() {\n        let selector = '.js-ref-following-slide';\n        let xPercent = 0;\n        switch (this.type) {\n            case 'prev':\n                xPercent = -100;\n                break;\n            case 'next':\n                xPercent = 100;\n                break;\n            default:\n                xPercent = 100;\n                break;\n        }\n\n        const [followingSlide] = query({\n            selector,\n            ctx: this.referenceSlider\n        });\n\n        const [oldSlide] = query({\n            selector: '.js-ref-current-slide',\n            ctx: this.referenceSlider\n        });\n\n        this.changeLocationHash(followingSlide);\n\n        oldSlide.classList.remove('ref-slide-init');\n\n        TweenMax.set(followingSlide, {\n            xPercent\n        });\n\n        TweenMax.set(followingSlide, {\n            xPercent\n        });\n\n        TweenMax.to(oldSlide, 0.5, {\n            xPercent: -xPercent,\n            ease: easing.easeInOut,\n            force3D: true,\n            onStart: () => {\n                TweenMax.to(followingSlide, 0.5, {\n                    xPercent: 0,\n                    ease: easing.easeInOut,\n                    force3D: true,\n                    onComplete: this.resetContext\n                });\n            }\n        });\n    }\n    resetContext() {\n        const [oldSlide] = query(\n            { selector: '.js-ref-current-slide' },\n            this.referenceSlider\n        );\n        const [followingSlide] = query(\n            { selector: '.js-ref-following-slide' },\n            this.referenceSlider\n        );\n\n        oldSlide.classList.remove('js-ref-current-slide');\n\n        followingSlide.classList.remove('js-ref-following-slide');\n        followingSlide.classList.add('js-ref-current-slide');\n\n        this.loader.classList.remove('loading');\n\n        TweenMax.set(followingSlide, { clearProps: 'all' });\n\n        this.currentReferenceId = 0;\n        this.newReferenceId = 0;\n        this.type = null;\n        this.currentSlide = null;\n\n        this.state.transitioning = false;\n        this.setCurrentContext();\n    }\n    setCurrentContext() {\n        if (this.idsList.length < 2) return;\n\n        this.unstickElements();\n        this.collants = [];\n\n        [this.currentSlide] = query({\n            selector: '.js-ref-current-slide'\n        });\n        this.currentReferenceId = parseInt(this.currentSlide.dataset.refId, 10);\n\n        const [prevButton, nextButton] = query({\n            selector: '.js-button-hexagon',\n            ctx: this.currentSlide\n        });\n\n        const { height } = this.currentSlide.getBoundingClientRect();\n        TweenMax.to(this.referenceSlider, 0.3, {\n            height: `${height}px`,\n            ease: easing.easeInOut,\n            force3D: true,\n            onComplete: () => {\n                TweenMax.set(this.referenceSlider, { clearProps: 'transform' });\n            }\n        });\n\n        prevButton.addEventListener(\n            'click',\n            () => {\n                if (this.state.transitioning) return;\n\n                this.type = 'prev';\n                this.changeSlide();\n            },\n            false\n        );\n        nextButton.addEventListener(\n            'click',\n            () => {\n                if (this.state.transitioning) return;\n\n                this.type = 'next';\n                this.changeSlide();\n            },\n            false\n        );\n\n        if (\n            !this.state.sticky &&\n            superWindow.windowWidth > breakpoints.horizontal.xl\n        ) {\n            this.collants = [\n                ...this.collants,\n                new Collant({\n                    ctx: this.currentSlide,\n                    selector: '.js-nav-btn',\n                    box: '.js-ref-first-part',\n                    offsetTop: '100px'\n                }),\n                new Collant({\n                    ctx: this.currentSlide,\n                    selector: '.js-btn-download',\n                    box: '.js-ref-content-wrapper',\n                    offsetTop: '160px'\n                }),\n                new Collant({\n                    ctx: this.currentSlide,\n                    selector: '.js-infos-datas',\n                    box: '.js-content-btn-infos',\n                    offsetTop: '25px'\n                })\n            ];\n\n            this.stickElements();\n        }\n    }\n    changeSlide() {\n        this.state.transitioning = true;\n        this.findFollowingElement();\n        this.checkLoadingCall();\n    }\n    initializeCaseStudyClickEvent() {\n        const caseStudies = query({ selector: '.js-case-study' });\n\n        forEach(caseStudies, caseStudy => {\n            caseStudy.addEventListener(\n                'click',\n                event => {\n                    event.preventDefault();\n                    if (this.state.transitioning) return;\n                    const selectedId = parseInt(caseStudy.dataset.refId, 10);\n\n                    this.scrollToReference();\n                    this.selectFollowingElement({ id: selectedId });\n                    this.checkLoadingCall();\n                },\n                false\n            );\n        });\n    }\n    resizeHandler() {\n        if (\n            !this.state.sticky &&\n            superWindow.windowWidth > breakpoints.horizontal.xl\n        ) {\n            this.stickElements();\n        } else if (\n            this.state.sticky &&\n            superWindow.windowWidth <= breakpoints.horizontal.xl\n        ) {\n            this.unstickElements();\n        }\n    }\n    initialize() {\n        [this.referenceSlider] = query({ selector: '.js-ref-slider' });\n        if (!this.referenceSlider) return;\n        [this.loader] = query({\n            selector: '.js-loader',\n            ctx: this.referenceSlider\n        });\n\n        this.getAllSlideIds(() => {\n            this.initializeCaseStudyClickEvent();\n            this.setCurrentContext();\n            this.checkLocationHash();\n        });\n\n        superWindow.addResizeEndFunction(this.resizeHandler);\n    }\n}\n\nexport default ReferencesSlider;\n"],"sourceRoot":""}