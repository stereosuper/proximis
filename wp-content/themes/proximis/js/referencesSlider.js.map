{"version":3,"sources":["webpack:///./wp-content/themes/proximis/src/js/components/ReferencesSlider.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAuD;AACvB;;AAEhC;AACA;AACA,iCAAiC,6DAAK,EAAE,6BAA6B;AACrE;AACA;AACA;AACA;AACA;;AAEA,QAAQ,6DAAa;AACrB;AACA;;AAEA;AACA;;AAEA;AACA,uDAAuD,OAAO;;AAE9D;AACA;AACA;AACA;AACA,uDAAuD;AACvD,aAAa;AACb,0BAA0B,UAAU,wBAAwB,wBAAwB;AACpF,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,gCAAgC,6DAAK;AACrC,4CAA4C,oBAAoB;AAChE,iBAAiB;;AAEjB;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,uDAAuD,OAAO;;AAE9D;AACA;AACA;AACA;AACA,uDAAuD;AACvD,aAAa;AACb,sCAAsC,oBAAoB;AAC1D,SAAS;AACT;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,6DAAK;AACtC;AACA;AACA,SAAS;;AAET,2BAA2B,6DAAK;AAChC;AACA;AACA,SAAS;;AAET;;AAEA,QAAQ,6CAAQ;AAChB;AACA,SAAS;;AAET,QAAQ,6CAAQ;AAChB;AACA,SAAS;;AAET,QAAQ,6CAAQ;AAChB;AACA;AACA,gBAAgB,6CAAQ;AACxB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,2BAA2B,6DAAK;AAChC,aAAa,oCAAoC;AACjD;AACA;AACA,iCAAiC,6DAAK;AACtC,aAAa,sCAAsC;AACnD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,6DAAK,EAAE,oCAAoC;AACzE,yCAAyC,6DAAK;AAC9C;AACA;AACA,SAAS;;AAET,eAAe,SAAS;AACxB,QAAQ,6CAAQ,gCAAgC,YAAY,OAAO,KAAK;;AAExE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC","file":"ReferencesSlider.js","sourcesContent":["import { superPolyfill, query } from '@stereorepo/sac';\nimport { TweenMax } from 'gsap';\n\nclass ReferencesSlider {\n    constructor() {\n        [this.referenceSlider] = query({ selector: '.js-ref-slider' });\n        if (!this.referenceSlider) return;\n        this.currentReferenceId = 0;\n        this.newReferenceId = 0;\n        this.type = null;\n        this.currentSlide = null;\n\n        superPolyfill.initializeWhatwgFetch();\n        this.getCurrentContext();\n    }\n\n    checkLoadingAction() {\n        this.currentReferenceId = this.currentSlide.dataset.refId;\n\n        const action = 'check_references';\n        const url = `/wp-admin/admin-ajax.php?action=${action}`;\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type':\n                    'application/x-www-form-urlencoded; charset=utf-8'\n            },\n            body: `type=${this.type}&current_reference_id=${this.currentReferenceId}`\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then(([id]) => {\n                this.newReferenceId = id;\n                const [slide] = query({\n                    selector: `.js-ref-id-${this.newReferenceId}`\n                });\n\n                if (slide) {\n                    slide.classList.add('js-ref-following-slide');\n\n                    this.slideAnimation();\n                } else {\n                    this.startLoadingAction();\n                }\n            });\n    }\n\n    startLoadingAction() {\n        const action = 'load_references';\n        const url = `/wp-admin/admin-ajax.php?action=${action}`;\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type':\n                    'application/x-www-form-urlencoded; charset=utf-8'\n            },\n            body: `new_reference_id=${this.newReferenceId}`\n        })\n            .then(res => res.text())\n            .then(response => {\n                this.currentSlide.insertAdjacentHTML('afterend', response);\n\n                this.slideAnimation();\n            });\n    }\n    slideAnimation() {\n        let selector = '.js-ref-following-slide';\n        let xPercent = 0;\n        switch (this.type) {\n            case 'prev':\n                xPercent = -100;\n                break;\n            case 'next':\n                xPercent = 100;\n                break;\n            default:\n                xPercent = 100;\n                break;\n        }\n\n        const [followingSlide] = query({\n            selector,\n            ctx: this.referenceSlider\n        });\n\n        const [oldSlide] = query({\n            selector: '.js-ref-current-slide',\n            ctx: this.referenceSlider\n        });\n\n        oldSlide.classList.remove('ref-slide-init');\n\n        TweenMax.set(followingSlide, {\n            xPercent\n        });\n\n        TweenMax.set(followingSlide, {\n            xPercent\n        });\n\n        TweenMax.to(oldSlide, 0.3, {\n            xPercent: -xPercent,\n            onComplete: () => {\n                TweenMax.to(followingSlide, 0.3, {\n                    xPercent: 0,\n                    onComplete: this.resetContext()\n                });\n            }\n        });\n    }\n    resetContext() {\n        const [oldSlide] = query(\n            { selector: '.js-ref-current-slide' },\n            this.referenceSlider\n        );\n        const [followingSlide] = query(\n            { selector: '.js-ref-following-slide' },\n            this.referenceSlider\n        );\n\n        oldSlide.classList.remove('js-ref-current-slide');\n\n        followingSlide.classList.remove('js-ref-following-slide');\n        followingSlide.classList.add('js-ref-current-slide');\n\n        this.currentReferenceId = 0;\n        this.newReferenceId = 0;\n        this.type = null;\n        this.currentSlide = null;\n\n        this.getCurrentContext();\n    }\n    getCurrentContext() {\n        [this.currentSlide] = query({ selector: '.js-ref-current-slide' });\n        const [prevButton, nextButton] = query({\n            selector: '.js-button-hexagon',\n            ctx: this.currentSlide\n        });\n\n        const { height } = this.currentSlide.getBoundingClientRect();\n        TweenMax.to(this.referenceSlider, 0.3, { height: `${height}px` });\n\n        prevButton.addEventListener(\n            'click',\n            () => {\n                this.type = 'prev';\n                this.checkLoadingAction();\n            },\n            false\n        );\n        nextButton.addEventListener(\n            'click',\n            () => {\n                this.type = 'next';\n                this.checkLoadingAction();\n            },\n            false\n        );\n    }\n}\n\nexport default ReferencesSlider;\n"],"sourceRoot":""}